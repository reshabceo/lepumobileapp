// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.7.2'
        classpath 'com.google.gms:google-services:4.4.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply from: "variables.gradle"

// Enable toolchain auto-download for plugins requiring newer JDKs (e.g., Java 21)
gradle.settingsEvaluated { settings ->
    // no-op hook to ensure settings are evaluated so gradle.properties flag is honored
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

// Prefer Java 17 for compilation where applicable
// Remove '--release' usage to stay compatible with Android Gradle plugin

// Set Java version for all projects
subprojects {
    afterEvaluate {
        if (project.hasProperty('android')) {
            android {
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_21
                    targetCompatibility JavaVersion.VERSION_21
                }
            }
        }

        // Align all plugins to Java 21 for consistency
        if (project.name.contains('capacitor')) {
            try {
                if (project.hasProperty('android')) {
                    android {
                        compileOptions {
                            sourceCompatibility JavaVersion.VERSION_21
                            targetCompatibility JavaVersion.VERSION_21
                        }
                    }
                }
            } catch (Throwable ignored) { }
            try {
                tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach { t ->
                    if (t.kotlinOptions != null) {
                        t.kotlinOptions.jvmTarget = '21'
                    }
                }
            } catch (Throwable ignored) { }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
